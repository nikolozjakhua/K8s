apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: application
  name: application
  namespace: njakhua
spec:
  replicas: 1
  selector:
    matchLabels:
      app: application
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: application
    spec:
      imagePullSecrets:
      - name: docker-secret
      initContainers: 
        - name: wait-for-statefulset
          image: busybox:latest
          command: ["/bin/sh", "-c", "until nslookup mongo.njakhua.svc.cluster.local; do sleep 2; done;"]
      containers:
      - image: nikolozjakhua/njakhua_application
        imagePullPolicy: IfNotPresent
        name: application
        ports:
        - containerPort: 5000
        resources:
          requests:
            memory: "64Mi"
            cpu: "0.2"
          limits:
            memory: "128Mi"
            cpu: "0.5"
        envFrom:
        - configMapRef:
            name: application
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthx
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 20
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: application
  namespace: njakhua
data:
  MONGO_HOST: mongo
  MONGO_PORT: "27017"
  BG_COLOR: teal
  FAIL_FLAG: "false"
---
apiVersion: v1
kind: Secret
metadata:
  name: mongo
type: Opaque
data:
  MONGO_INITDB_ROOT_USERNAME: cm9vdAo=
  MONGO_INITDB_ROOT_PASSWORD: ZXhhbXBsZQo=
---
apiVersion: v1
kind: Service
metadata:
  name: application
  namespace: njakhua
spec:
  type: ClusterIP
  selector:
    app: application
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: njakhua
spec:
  type: ClusterIP
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: njakhua
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo
          ports:
            - containerPort: 27017
          resources:
            limits:
              cpu: "0.5"
              memory: "256Mi"
            requests:
              cpu: "0.2"
              memory: "128Mi"
          envFrom:
          - secretRef:
              name: mongo
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: mongo-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx
  namespace: njakhua
spec:
  ingressClassName: nginx
  rules:
  - host: njakhua.application.com
    http:
      paths:
      - backend:
          service:
            name: application
            port:
              number: 80
        path: /
        pathType: Prefix
